
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to get user data from the 'users' collection
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any signed-in user can create their own user document (e.g., on signup)
      allow create: if isSignedIn();
      // A user can only read or update their own data.
      allow read, update: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'rides' collection
    match /rides/{rideId} {
      // A signed-in user can create a ride
      allow create: if isSignedIn();
      
      // The customer who created the ride or the assigned driver can read it
      allow read: if isSignedIn() && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);

      // The customer can cancel their ride, and the driver can accept/update it
      allow update: if isSignedIn() && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);
    }
    
    // Rules for wallet top-up requests
    match /walletRequests/{requestId} {
        // Any signed-in user can create a wallet request
        allow create: if isSignedIn();
        // Only the user who created it can read their own request
        allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
    }
  }
}
