
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    match /rides/{rideId} {
      // Customer can create, can read their own ride, and can cancel.
      // Driver can read booked rides, or rides they are assigned to.
      // Driver can update rides they are assigned to.
      // Admin can read all rides.
      allow create: if request.auth.uid == request.resource.data.customerId;
      allow read: if request.auth != null && (resource.data.customerId == request.auth.uid || resource.data.driverId == request.auth.uid || isAdmin());
      allow update: if request.auth != null && 
                    (
                      (resource.data.customerId == request.auth.uid && request.resource.data.status == 'cancelled_by_customer') || 
                      (resource.data.driverId == request.auth.uid) ||
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Driver' && resource.data.driverId == null) // Allow any driver to accept
                    );
    }
    
    match /advertisements/{adId} {
      allow read: if request.auth != null; // All authenticated users can see ads
      allow write: if isAdmin(); // Only admin can create/update/delete
    }

    match /walletRequests/{reqId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, write: if isAdmin();
    }
    
    match /payoutRequests/{reqId} {
       allow read, write: if isAdmin();
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth != null && (chatId.split('_')[0] == request.auth.uid || chatId.split('_')[1] == request.auth.uid || isAdmin());
    }
    
    match /rides/{rideId}/messages/{messageId} {
      allow read, create: if request.auth != null; // More specific rules might be needed
    }

    match /configs/appConfig {
      allow read: if true; // Everyone can read config
      allow write: if isAdmin(); // Only admin can write config
    }
    
    match /notifications/{notifId} {
      allow read, write: if isAdmin();
    }
    
    match /walletTransactions/{transId} {
       allow read, write: if isAdmin();
    }

  }
}
