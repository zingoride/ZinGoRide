rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read/write their own data.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Admins can read all user data (needed for the users page)
    // For simplicity, we are not checking for an admin role via custom claims yet.
    // We will allow any authenticated user to read the users list for now.
    match /users/{userId} {
      allow list: if request.auth != null;
    }

    // Wallet requests can be created by any authenticated user.
    // Reading/updating them should be an admin-only task.
    match /walletRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null; // Simplified for now
    }

    // Rides can be created by any authenticated user.
    // They can be read by any authenticated user (so drivers can see requests).
    // They can only be updated by the customer who created it or the assigned driver.
    match /rides/{rideId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update: if request.auth != null && (request.resource.data.customerId == request.auth.uid || resource.data.driverId == request.auth.uid);
    }
  }
}
