rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    // Admins have full read/write access to the entire database.
    // This rule is checked first. If a user is an admin, they get access,
    // and evaluation of other more specific rules stops for them.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read their own document.
      allow read: if request.auth != null && request.auth.uid == userId;
      // Any authenticated user can update their own document.
      allow update: if request.auth != null && request.auth.uid == userId;
      // Allow user creation
      allow create: if request.auth != null;
    }

    // Rules for the 'rides' collection
    match /rides/{rideId} {
        // A user can create a ride request
        allow create: if request.auth != null;
        // The assigned customer or driver can read the ride details
        allow read: if request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);
        // The assigned driver or customer (for cancellation) can update the ride
        allow update: if request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);
    }
    
    // Rules for wallet requests
    match /walletRequests/{requestId} {
        // A user can create their own wallet request
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
     // Rules for configs
    match /configs/{configId} {
      // Allow any authenticated user to read configuration
      allow read: if request.auth != null;
    }

    // Rules for advertisements
    match /advertisements/{adId} {
      // Allow any authenticated user to read advertisements
      allow read: if request.auth != null;
    }
  }
}
