
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    // Users can only read/write their own data. Admin can read anyone's data.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
      // Allow user creation by anyone (for signup)
      allow create: if request.auth != null;
    }

    // Rules for rides
    match /rides/{rideId} {
      // Customer can create their own ride request
      allow create: if request.auth.uid == request.resource.data.customerId;
      
      // Customer can read their own ride, assigned driver can read it, admin can read any ride
      allow read: if request.auth.uid == resource.data.customerId 
                  || request.auth.uid == resource.data.driverId 
                  || isAdmin();

      // Customer can cancel. Driver can accept/update.
      allow update: if (request.auth.uid == resource.data.customerId && request.resource.data.status == 'cancelled_by_customer')
                      || (request.auth.uid == resource.data.driverId)
                      || isAdmin();
    }
    
    // Messages within a ride can be read/written by customer or driver of that ride
    match /rides/{rideId}/messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/rides/$(rideId)).data.customerId == request.auth.uid
                          || get(/databases/$(database)/documents/rides/$(rideId)).data.driverId == request.auth.uid
                          || isAdmin();
    }
    
    // General app configurations are readable by anyone, but only writable by admin
    match /configs/appConfig {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Anyone can read advertisements
    match /advertisements/{adId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Users can submit wallet requests for themselves. Admins can update them.
    match /walletRequests/{reqId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if isAdmin();
    }
    
    // General chat between users (e.g., admin to user)
    match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid in chatId.split('_');
    }
    
    // Default deny all other collections
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
