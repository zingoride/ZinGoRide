rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an Admin
    // We check the 'type' field in their user document
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admin can read/write any user document.
      // A user can read/write their own document.
      allow read, write: if request.auth != null && (isAdmin() || request.auth.uid == userId);
    }
    
    // Rules for 'rides' collection
    match /rides/{rideId} {
        // Admin can do anything.
        // Users can create rides.
        // Only involved users (customer/driver) can read/update their ride.
        allow read, update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);
        allow create: if request.auth != null;
    }

    // Rules for wallet top-up requests
    match /walletRequests/{reqId} {
        // Admin can read/write all requests.
        // A user can only create a request for themselves.
        allow read, write: if request.auth != null && isAdmin();
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Rules for admin payout requests
    match /payoutRequests/{reqId} {
        // Only Admin can read or create payout requests for themselves.
        allow read, write, create: if request.auth != null && isAdmin();
    }

    // Rules for broadcast notifications
    match /notifications/{notifId} {
        // Only Admin can manage notifications.
        allow read, write: if request.auth != null && isAdmin();
    }

    // Rules for advertisements
    match /advertisements/{adId} {
        // Admin can manage ads. All authenticated users can read them.
        allow read: if request.auth != null;
        allow write: if request.auth != null && isAdmin();
    }
    
    // Rules for application configuration
    match /configs/appConfig {
        // All authenticated users can read the config (for theme, logo, etc.)
        // Only Admin can write/update the config.
        allow read: if request.auth != null;
        allow write: if request.auth != null && isAdmin();
    }
    
     match /chats/{chatId}/messages/{messageId} {
      // Admin, or users who are part of the chat, can read/write messages
      allow read, write: if request.auth != null && (isAdmin() || request.auth.uid in chatId.split('_'));
    }

    // This is a catch-all for any other collection.
    // By default, deny access to everything else unless specified above.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}