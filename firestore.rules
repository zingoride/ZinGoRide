rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Hardcoding the Admin UID is the most secure and reliable way to grant admin privileges.
      // Replace with your actual Admin User's UID from Firebase Authentication.
      return request.auth.uid == '9xLq5tLz9oYy6zDm1iIOnV5S9373';
    }

    // --- Default Rule ---
    // By default, no one can read or write to any document.
    // We will open up permissions on a per-collection basis below.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Users Collection ---
    // Read: Any signed-in user can read user profiles (needed for ride details, maps).
    // Write: Only the user themselves or an admin can update a profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
    }

    // --- Rides Collection ---
    // Read: Any signed-in user can read ride documents.
    // Create: Any signed-in user can create a ride.
    // Update: Only the owner (customer/driver) or an admin can update.
    match /rides/{rideId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSignedIn() && (isOwner(resource.data.customerId) || isOwner(resource.data.driverId) || isAdmin());
    }

    // --- Configs Collection ---
    // Read: Any signed-in user can read configs (for theme, logo, etc.).
    // Write: Only an admin can change configs.
    match /configs/{configId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // --- Advertisements Collection ---
    // Read: Any signed-in user can see ads.
    // Write: Only admin can create/manage ads.
    match /advertisements/{adId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    // --- Wallet & Payout Requests ---
    // Read: Only the user who made the request or an admin can read it.
    // Create: A user can only create a request for themselves.
    // Write: Only an admin can approve/reject requests.
    match /walletRequests/{reqId} {
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        allow read, update, delete: if isAdmin() || (isSignedIn() && isOwner(resource.data.userId));
    }

    match /payoutRequests/{reqId} {
        allow read, write: if isAdmin(); // Only admin can manage payouts
    }
    
     // --- General Collections ---
    // Allow admin full access to these collections.
    // Users can read chat messages in their own chats.
    match /chats/{chatId}/{document=**} {
      allow read, write: if isSignedIn();
    }
    match /notifications/{notifId} {
        allow read, write: if isAdmin();
    }
     match /walletTransactions/{transId} {
        allow read, write: if isAdmin();
    }
  }
}
