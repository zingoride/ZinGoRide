
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /rides/{rideId} {
      allow read: if request.auth != null;

      allow create: if request.auth.uid == request.resource.data.customerId &&
                       "pickup" in request.resource.data &&
                       "dropoff" in request.resource.data &&
                       "customerId" in request.resource.data &&
                       "customerName" in request.resource.data &&
                       "status" in request.resource.data &&
                       request.resource.data.status == "pending" &&
                       (!("pickupCoords" in request.resource.data) || request.resource.data.pickupCoords is latlng);

      // Customer can update to 'booked' or 'cancelled_by_customer'
      // Driver can update to 'accepted', 'in_progress', 'completed', or 'cancelled_by_driver'
      allow update: if 
          // Customer permissions
          (request.auth.uid == resource.data.customerId &&
            // Customer can book a pending ride
            (resource.data.status == 'pending' && request.resource.data.status == 'booked' &&
             request.resource.data.keys().hasAll(['vehicleType', 'fare'])
            ) ||
            // Customer can cancel a ride before it's completed
            (request.resource.data.status == 'cancelled_by_customer' && resource.data.status != 'completed')
          ) ||
          // Driver permissions
          (request.auth.uid == request.resource.data.driverId &&
            (request.resource.data.status == 'in_progress' ||
             request.resource.data.status == 'completed' ||
             request.resource_data.status == 'cancelled_by_driver')
          ) ||
          // Driver can accept a booked ride
          (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Driver' &&
            resource.data.status == 'booked' && request.resource.data.status == 'accepted' &&
            request.resource.data.driverId == request.auth.uid
          );
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth != null; // Simple rule for now
    }
  }
}
