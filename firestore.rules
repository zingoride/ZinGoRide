
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isAuthOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    function isAdmin() {
      return isAuth() && getUserData().type == 'Admin';
    }
    function isDriver() {
      return isAuth() && getUserData().type == 'Driver';
    }
    function isCustomer() {
       return isAuth() && getUserData().type == 'Customer';
    }

    // Collections
    match /users/{userId} {
      allow read, update: if isAuthOwner(userId) || isAdmin();
      allow create: if isAuth();
    }

    match /rides/{rideId} {
      // READ: Any authenticated user can read. The app's queries will filter what is shown.
      allow read: if isAuth();

      // CREATE: Only a customer can create a ride for themselves.
      allow create: if isCustomer() && request.resource.data.customerId == request.auth.uid;
      
      // UPDATE:
      allow update: if 
            // The customer can update (e.g., to cancel) if they are the owner
            (isCustomer() && resource.data.customerId == request.auth.uid) ||
            // A driver can update (e.g., accept, start, complete)
            (isDriver()) ||
            // An admin can update anything
            isAdmin();

      // DELETE: Only an admin can delete a ride document.
      allow delete: if isAdmin();
    }

    match /configs/{configId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    match /advertisements/{adId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    match /walletRequests/{reqId} {
        allow read: if isAuth();
        allow create: if isAuth();
        allow update, delete: if isAdmin();
    }

    match /payoutRequests/{reqId} {
        allow read, create: if isAdmin();
        allow update, delete: if isAdmin();
    }

    match /notifications/{notifId} {
        allow read, write: if isAdmin();
    }
    
    match /chats/{chatId}/{message=**} {
      allow read, write: if isAuth();
    }

  }
}
