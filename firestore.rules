
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // UID for the admin user
      return request.auth.uid == 'xMGCQ5b3oic287oK9yTzKSgyTkj2';
    }

    // Users can be read by anyone, but only the user themselves or an admin can write.
    match /users/{userId} {
      allow read;
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // Rides can be created by authenticated users.
    // They can be read/updated by the customer, the assigned driver, or an admin.
    match /rides/{rideId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.customerId 
                          || request.auth.uid == resource.data.driverId 
                          || isAdmin();
      
      // Chat messages within a ride
      match /messages/{messageId} {
        allow read, create: if request.auth.uid == resource.data.customerId 
                              || request.auth.uid == resource.data.driverId
                              || isAdmin();
      }
    }

    // Wallet requests can be created by the user, but only read/updated by an admin.
    match /walletRequests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update, delete: if isAdmin();
    }
    
    // Payout requests can only be managed by an admin
    match /payoutRequests/{requestId} {
      allow read, write: if isAdmin();
    }

    // Notifications can only be managed by an admin
    match /notifications/{notificationId} {
       allow read, write: if isAdmin();
    }
    
    // Admin chats can only be accessed by the admin or the involved user
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in split(chatId, '_') || isAdmin();
        
        match /messages/{messageId} {
            allow read, write: if request.auth.uid in split(chatId, '_') || isAdmin();
        }
    }
  }
}
