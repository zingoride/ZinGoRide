rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requester is an admin.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // **Admin Full Access Rule**
    // Admins have complete read and write access to the entire database.
    // This rule is checked first. If a user is an admin, they are granted access
    // and other, more specific rules are not evaluated for them.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // **User-Specific Rules (for non-admins)**

    // Users can read and update their own user document.
    // They cannot create or delete user documents directly (admins do that).
    match /users/{userId} {
      allow get, update: if isSignedIn() && request.auth.uid == userId;
    }

    // Customers can create rides. The customer who created the ride or the assigned driver can read/update it.
    match /rides/{rideId} {
      allow create: if isSignedIn();
      allow get, update: if isSignedIn() && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.driverId);
    }
    
    // Configs, Ads, and Notifications are publicly readable by any signed-in user
    // but only writable by admins (covered by the global admin rule).
    match /configs/{configId} {
      allow get: if isSignedIn();
    }
    match /advertisements/{adId} {
        allow get: if isSignedIn();
    }
     match /notifications/{notificationId} {
        allow get: if isSignedIn();
    }

    // Authenticated users can create wallet top-up requests.
    match /walletRequests/{requestId} {
      allow create: if isSignedIn();
    }
  }
}
