rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isRider() {
      return isSignedIn() && getUserData().type == 'Driver';
    }
    
    function isCustomer() {
      return isSignedIn() && getUserData().type == 'Customer';
    }

    // User profiles can be read and updated only by the owner.
    // Anyone can create a user profile (signup).
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create;
    }

    // Wallet requests can be created by any signed-in user.
    // Only admins (not yet implemented in rules) will manage them later.
    match /walletRequests/{requestId} {
        allow create: if isSignedIn();
    }
    
    match /rides/{rideId} {
      // A customer can create their own ride request.
      allow create: if isCustomer() && request.resource.data.customerId == request.auth.uid;
      
      // The customer who owns the ride can read and update it (e.g., cancel).
      // A driver who has accepted the ride can also read it.
      allow read, update: if (isCustomer() && resource.data.customerId == request.auth.uid) || (isRider() && resource.data.driverId == request.auth.uid);

      // Any logged-in rider can see ride requests that are not yet taken.
      allow list: if isRider();
    }
  }
}