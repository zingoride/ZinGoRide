
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.type == 'Admin';
    }

    // Users can only read/write their own data. Admin can read/write any user.
    match /users/{userId} {
      allow read, update, delete: if isAuth() && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow create: if isAuth();
    }
    
    match /rides/{rideId} {
      // ANY authenticated user can read the rides collection. 
      // The app's query will filter what they actually see (e.g., drivers only see 'booked' rides).
      allow read: if isAuth();

      // Only the customer can create their own ride.
      allow create: if isAuth() && request.resource.data.customerId == request.auth.uid;
      
      // The assigned driver, the customer, or an admin can update the ride.
      allow update: if isAuth() && (
        (resource.data.driverId == request.auth.uid) ||
        (resource.data.customerId == request.auth.uid) ||
        isAdmin(request.auth.uid)
      );

      // Admin can delete rides.
      allow delete: if isAuth() && isAdmin(request.auth.uid);
    }
    
    // All other collections are admin-only
    match /advertisements/{adId} {
      allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /configs/{configId} {
       allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /notifications/{notifId} {
       allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /payoutRequests/{payoutId} {
       allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /walletRequests/{reqId} {
       allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /walletTransactions/{transId} {
       allow read, write: if isAuth() && isAdmin(request.auth.uid);
    }
    
    match /chats/{chatId}/{message=**} {
      allow read, write: if isAuth();
    }
  }
}
