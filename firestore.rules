rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    // Rules for users collection
    match /users/{userId} {
      // Any signed-in user can read user profiles (for maps, ride details, etc.)
      allow read: if isSignedIn();
      // Only the user themselves or an admin can update their profile
      allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
    }

    // Rules for rides collection
    match /rides/{rideId} {
      allow read: if isSignedIn() && (isOwner(request.resource.data.customerId) || isOwner(request.resource.data.driverId) || isAdmin());
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(request.resource.data.customerId) || isOwner(request.resource.data.driverId) || isAdmin());
    }
    
    match /rides/{rideId}/messages/{messageId} {
      allow read, write: if isSignedIn();
    }
    
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if isSignedIn();
    }

    // Rules for app configuration
    match /configs/{configId} {
      allow read: if true; // Everyone can read config
      allow write: if isAdmin(); // Only admins can change config
    }

    // Rules for advertisements
    match /advertisements/{adId} {
      allow read: if true; // Everyone can read ads
      allow create, update, delete: if isAdmin(); // Only admin can manage ads
    }

    // Rules for wallet top-up requests
    match /walletRequests/{reqId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin(); // Only admin can approve/reject
    }

    // Payouts can only be managed by admin
    match /payoutRequests/{payoutId} {
        allow read, write, create, delete: if isAdmin();
    }

    // Admin can manage notifications
    match /notifications/{notifId} {
        allow read, write, create, delete: if isAdmin();
    }

    // Admin can manage wallet transactions
    match /walletTransactions/{transId} {
        allow read, write, create, delete: if isAdmin();
    }
  }
}
