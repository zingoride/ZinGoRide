rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // The primary admin UID is hardcoded for superuser access.
      // Additionally, checks if a user's type is 'Admin' in the database.
      return request.auth.uid == 'xMGCQ5b3oic287oK9yTzKSgyTkj2' || 
             (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin');
    }

    function isDriver() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Driver';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId) || isAdmin();
    }

    match /rides/{rideId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Let's break down the update logic for clarity
      // Customer can update to book or cancel
      // Driver can update to accept, start, or complete
      // Admin can update anything
      allow update: if (isOwner(request.resource.data.customerId) && (request.resource.data.status == 'cancelled_by_customer' || request.resource.data.status == 'booked')) ||
                       (isDriver() && (request.resource.data.status == 'accepted' || request.resource.data.status == 'in_progress' || request.resource.data.status == 'completed' || request.resource.data.status == 'cancelled_by_driver')) ||
                       isAdmin();
      allow delete: if isAdmin();
    }
    
    match /rides/{rideId}/messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/rides/$(rideId)).data.customerId == request.auth.uid ||
                               get(/databases/$(database)/documents/rides/$(rideId)).data.driverId == request.auth.uid ||
                               isAdmin();
    }

    match /walletRequests/{requestId} {
        allow read: if isAdmin();
        allow create: if isOwner(request.resource.data.userId);
        allow update, delete: if isAdmin();
    }

    match /advertisements/{adId} {
        allow read: if request.auth != null;
        allow write, delete: if isAdmin();
    }
    
    match /payoutRequests/{payoutId} {
        allow read, write: if isAdmin();
    }

    match /notifications/{notificationId} {
        allow read, write: if isAdmin();
    }
    
    match /configs/{configId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
     match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth.uid in chatId.split('_') || isAdmin();
    }
  }
}
