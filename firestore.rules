rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Admin';
    }

    function isDriver() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'Driver';
    }

    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    match /rides/{rideId} {
      // Read:
      // Allow read if the user is the customer, the assigned driver, or an admin.
      // Any authenticated user can read from the collection (for querying booked rides),
      // but the rules on the individual document level are more specific.
      allow read: if isAuth();

      // Create:
      // Allow customer to create a ride for themselves.
      allow create: if isAuth() && request.resource.data.customerId == request.auth.uid;

      // Update:
      // Allow customer to cancel.
      // Allow driver to accept/update.
      // Allow admin to update anything.
      allow update: if (isAuth() && (
                      (resource.data.customerId == request.auth.uid && request.resource.data.status == 'cancelled_by_customer') ||
                      (isDriver() && (resource.data.driverId == null || resource.data.driverId == request.auth.uid)) ||
                      isAdmin()
                    ));
      
      // Delete:
      // Only admins can delete rides for record-keeping purposes.
      allow delete: if isAdmin();
    }
    
    match /chats/{chatId}/{message=**} {
      allow read, write: if isAuth() && (chatId.split('_')[0] == request.auth.uid || chatId.split('_')[1] == request.auth.uid || isAdmin());
    }

    match /walletRequests/{requestId} {
      allow create: if isAuth();
      allow read, update, delete: if isAdmin();
    }

    match /payoutRequests/{requestId} {
       allow read, create, update, delete: if isAdmin();
    }

    match /notifications/{notificationId} {
      allow read, create, update, delete: if isAdmin();
    }

    match /advertisements/{adId} {
       allow read, create, update, delete: if isAdmin();
    }
    
    match /configs/{configId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
     match /walletTransactions/{transactionId} {
        allow read, create: if isAdmin();
     }
  }
}
